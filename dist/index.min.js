/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


(function () {

  var events = [];
  var on = __webpack_require__(1)(events);
  var off = __webpack_require__(2)(events);

  Element.prototype.on = on;
  Element.prototype.off = off;
})();

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


//IE8 and lower compatible (useless but rewarding)

var addHandler = function addHandler() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return 'addEventListener' in this ? this.addEventListener.apply(this, args.concat([0])) : this.attachEvent.apply(this, args);
};

module.exports = function (events) {
  return function on() {
    var _this = this;

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    var findElement = events.filter(function (handler) {
      return handler.el === _this;
    });
    if (findElement.length) {
      //the element already exists
      var findEvent = events.find(function (handler) {
        return handler.event === args[0] && handler.el === _this;
      });
      if (typeof findEvent !== 'undefined') {
        //the element has already this event registered
        findEvent.func.push(args[1]);
        addHandler.call.apply(addHandler, [this].concat(args));
      }
    }
    events.push({ el: this, event: args[0], func: [args[1]] });
    addHandler.call.apply(addHandler, [this].concat(args));
    return events;
  };
};

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var removeHandler = function removeHandler() {
  return 'removeEventListener' in this ? this.removeEventListener.apply(this, arguments) : this.detachEvent.apply(this, arguments);
};

module.exports = function (events) {
  return function off() {
    var _this = this;

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var handler = events.filter(function (handler) {
      return handler.el === _this;
    });
    handler = handler.find(function (handler) {
      return handler.event === args[0];
    });
    var handlerIndex = events.findIndex(function (h) {
      return h === handler;
    });
    if (typeof handler !== 'undefined') {
      if (!args[1]) {
        events.splice(handlerIndex, 1);
        handler.func.forEach(function (f) {
          return removeHandler.call(_this, args[0], f);
        });
      } else {
        handler.func.forEach(function (f) {
          if (f.toString() === args[1].toString()) {
            events.splice(handlerIndex, 1);
            removeHandler.call(_this, args[0], f);
          }
        });
      }
    }
    return events;
  };
};

/***/ })
/******/ ]);